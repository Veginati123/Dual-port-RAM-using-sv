class ram_write_mon;
  virtual ram_if.WR_MON wr_mon_if;
  ram_trans data2rm;
  ram_trans cov_data;
  mailbox #(ram_trans) mon2rm;
  function new(virtual ram_if.WR_MON wr_mon_if,mailbox #(ram_trans) mon2rm);
    this.wr_mon_if =wr_mon_if;
    this.mon2rm=mon2rm;
    this.data2rm=new;
    mem_coverage = new();
  endfunction
  virtual task monitor();
    @(wr_mon_if.wr_mon_cb);
    wait(wr_mon_if.wr_mon_cb.write==1)
    @(wr_mon_if.wr_mon_cb);
    begin
      data2rm.write = wr_mon_if.wr_mon_cb.write;
      data2rm.wr_address=wr_mon_if.wr_mon_cb.wr_address;
      data2rm.data_in=wr_mon_if.wr_mon_cb.data_in;
      //call the display of ramP_trans to display the monitor
      data2rm.display("DATA FROM WRITE MONITOR");
    end
  endtask
  task start();
    fork
      forever
        begin
          monitor();
          cov_data=data2rm;
          mem_coverage.sample();
          mon2rm.put(data2rm);
        end
    join_none
  endtask
endclass
