interface ram_if(input bit clock);
  logic [63:0] data_in;
  logic [63:0]data_out;
  logic [11:0] rd_address;
  logic [11:0] wr_address;
  logic read;
  logic write;
  //write driver clocking  block
  clocking wr_drv_cb@(posedge clock);
    default input #1 output #1;
    output wr_address;
    output data_in;
    output write;
  endclocking
  //read driver clocking block
  clocking rd_drv_cb@(posedge clock);
    default input #1 output #1;
    output rd_address;
    output read;
    
  endclocking
  //write monitor clocking block
  clocking wr_mon_cb@(posedge clock);
    default input #1 output #1;
    input wr_address;
    input write;
    input data_in;
  endclocking
  //read monitor clocking block
  clocking rd_mon_cb@(posedge clock);
    default input #1 output #1
    input rd_address;
    input read;
    input data_out;
    
  endclocking
  //write driver modport
  modport WR_DRV( clocking wr_drv_cb);
    
  //read driver modport
    modport RD_DRV( clocking rd_drv_cb);
    //write monitor modport
      modport WR_MON(clocking wr_mon_cb );
        //write driver modport
        modport RD_MON(clocking rd_mon_cb);
  
endinterface
