parameter cycle = 10;
  reg clock;
  //instantiate the interface
  ram_if DUV_IF(clock);
  //declare an handle for the test as test_h
  test test_h;
  //instantiate the duv
  ram_4096 RAM(.clk(clock),.data_in(DUV_IF.data_in),.data_out(DUV_IF.data_out),.wr_address(DUV_IF.wr_address),.rd_address(DUV_IF.rd_address),.read(DUV_IF.read),.write(DUV_IF.write));
  initial
    begin
      //create object for test and pass the interface instance as aruguments
      test_h = new(DUV_IF)
      //call the task build and run
      test_h.build_and_run();
      
    end
  //generate the clock
  initial
    begin
      clock = 1'b0;
      forever #(cycle/2) clock=~clock;
      
    end
   initial
    begin
      $dumpvars;
    $dumpfile("dump.vcd");
    #1000
      $finish;
     end
  /*initial
    begin
      $dumpfile("dump.vcd");
      $dumpvars(1, dual_port_ram_tb);       
      
      clk=1'b1;
      forever #5 clk = ~clk;
    end*/
endmodule
